/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_doom119_ffs_Loader */

#ifndef _Included_com_doom119_ffs_SDL2
#define _Included_com_doom119_ffs_SDL2
#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jint JNICALL Java_com_doom119_ffs_SDL2_nativeInit
        (JNIEnv *env, jclass type);

JNIEXPORT jint JNICALL Java_com_doom119_ffs_SDL2_nativeInit
        (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_nativeLowMemory
        (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_nativeQuit
        (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_nativePause
        (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_nativeResume
        (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeDropFile
        (JNIEnv *, jclass, jstring);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeResize
        (JNIEnv *, jclass, jint, jint, jint, jfloat);

JNIEXPORT jint JNICALL Java_com_doom119_ffs_SDL2_onNativePadDown
        (JNIEnv *, jclass, jint, jint);

JNIEXPORT jint JNICALL Java_com_doom119_ffs_SDL2_onNativePadUp
        (JNIEnv *, jclass, jint, jint);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeJoy
        (JNIEnv *, jclass, jint, jint, jfloat);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeHat
        (JNIEnv *, jclass, jint, jint, jint, jint);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeKeyDown
        (JNIEnv *, jclass, jint);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeKeyUp
        (JNIEnv *, jclass, jint);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeKeyboardFocusLost
        (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeMouse
        (JNIEnv *, jclass, jint, jint, jfloat, jfloat);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeTouch
        (JNIEnv *, jclass, jint, jint, jint, jfloat, jfloat, jfloat);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeAccel
        (JNIEnv *, jclass, jfloat, jfloat, jfloat);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeSurfaceChanged
        (JNIEnv *, jclass);

JNIEXPORT void JNICALL Java_com_doom119_ffs_SDL2_onNativeSurfaceDestroyed
        (JNIEnv *, jclass);

JNIEXPORT jint JNICALL Java_com_doom119_ffs_SDL2_nativeAddJoystick
        (JNIEnv *, jclass, jint, jstring, jint, jint, jint, jint, jint);

JNIEXPORT jint JNICALL Java_com_doom119_ffs_SDL2_nativeRemoveJoystick
        (JNIEnv *, jclass, jint);

JNIEXPORT jstring JNICALL Java_com_doom119_ffs_SDL2_nativeGetHint
        (JNIEnv *, jclass, jstring);

//////////////////////////////////////////////////////
/*            bridge SDL_Android.c                  */
//////////////////////////////////////////////////////
extern JNIEXPORT void JNICALL SDL_Android_Init
        (JNIEnv* mEnv, jclass cls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeSurfaceDestroyed
        (JNIEnv* env, jclass jcls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeDropFile
        (JNIEnv* env, jclass jcls, jstring filename);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeResize(
        JNIEnv* env, jclass jcls,
        jint width, jint height, jint format, jfloat rate);

extern JNIEXPORT jint JNICALL Java_org_libsdl_app_SDLActivity_onNativePadDown(
        JNIEnv* env, jclass jcls,
        jint device_id, jint keycode);

extern JNIEXPORT jint JNICALL Java_org_libsdl_app_SDLActivity_onNativePadUp(
        JNIEnv* env, jclass jcls,
        jint device_id, jint keycode);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeJoy(
        JNIEnv* env, jclass jcls,
        jint device_id, jint axis, jfloat value);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeHat(
        JNIEnv* env, jclass jcls,
        jint device_id, jint hat_id, jint x, jint y);

extern JNIEXPORT jint JNICALL Java_org_libsdl_app_SDLActivity_nativeAddJoystick(
        JNIEnv* env, jclass jcls,
        jint device_id, jstring device_name, jint is_accelerometer,
        jint nbuttons, jint naxes, jint nhats, jint nballs);

extern JNIEXPORT jint JNICALL Java_org_libsdl_app_SDLActivity_nativeRemoveJoystick(
        JNIEnv* env, jclass jcls, jint device_id);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeSurfaceChanged
        (JNIEnv* env, jclass jcls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeSurfaceDestroyed
        (JNIEnv* env, jclass jcls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeKeyDown(
        JNIEnv* env, jclass jcls, jint keycode);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeKeyUp(
        JNIEnv* env, jclass jcls, jint keycode);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeKeyboardFocusLost(
        JNIEnv* env, jclass jcls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeTouch(
        JNIEnv* env, jclass jcls,
        jint touch_device_id_in, jint pointer_finger_id_in,
        jint action, jfloat x, jfloat y, jfloat p);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeMouse(
        JNIEnv* env, jclass jcls,
        jint button, jint action, jfloat x, jfloat y);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_onNativeAccel(
        JNIEnv* env, jclass jcls,
        jfloat x, jfloat y, jfloat z);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_nativeLowMemory(
        JNIEnv* env, jclass cls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_nativeQuit(
        JNIEnv* env, jclass cls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_nativePause(
        JNIEnv* env, jclass cls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLActivity_nativeResume(
        JNIEnv* env, jclass cls);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLInputConnection_nativeCommitText(
        JNIEnv* env, jclass cls,
        jstring text, jint newCursorPosition);

extern JNIEXPORT void JNICALL Java_org_libsdl_app_SDLInputConnection_nativeSetComposingText(
        JNIEnv* env, jclass cls,
        jstring text, jint newCursorPosition);

extern JNIEXPORT jstring JNICALL Java_org_libsdl_app_SDLActivity_nativeGetHint
        (JNIEnv* env, jclass cls, jstring name);

#ifdef __cplusplus
}
#endif
#endif
